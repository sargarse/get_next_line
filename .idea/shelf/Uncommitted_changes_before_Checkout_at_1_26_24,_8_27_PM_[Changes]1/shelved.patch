Index: main.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   main.c                                             :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: sgarcia3 <sgarcia3@student.42madrid.com>   +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/12/06 18:01:12 by sgarcia3          #+#    #+#             */\n/*   Updated: 2023/12/09 01:23:51 by sgarcia3         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"get_next_line.h\"\n#include <stdio.h>\n#include <fcntl.h>\n\nint main(void)\n{\n\tint\tfd;\n\tchar\t*line;\n\n\tfd = open(\"archivo.txt\", O_RDONLY);\n\tif (fd == -1)\n\t\treturn (1);\n\twhile ((line = get_next_line(fd)))\n\t{\n\t\tprintf(\"%s\\n\", line);\n\t\tfree(line);\n\t}\n\tclose (fd);\n\treturn (0);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.c b/main.c
--- a/main.c	
+++ b/main.c	
@@ -18,14 +18,18 @@
 {
 	int	fd;
 	char	*line;
+	int		i;
 
-	fd = open("archivo.txt", O_RDONLY);
+	i = 0;
+	fd = open("archivo2.txt", O_RDONLY);
 	if (fd == -1)
 		return (1);
-	while ((line = get_next_line(fd)))
+	while (i < 5)
 	{
-		printf("%s\n", line);
+		line = get_next_line(fd);
+		printf("%s", line);
 		free(line);
+		i++;
 	}
 	close (fd);
 	return (0);
Index: get_next_line_utils.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   get_next_line_utils.c                              :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: sgarcia3 <sgarcia3@student.42madrid.com>   +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2024/01/09 00:20:03 by sgarcia3          #+#    #+#             */\n/*   Updated: 2024/01/09 13:55:01 by sgarcia3         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"get_next_line.h\"\n\nchar\t*ft_strjoin_gnl(char *s1, char *s2, ssize_t *position)\n{\n\tsize_t\tlen;\n\tsize_t\ti;\n\tchar\t*ptr;\n\tchar\t*tmp;\n\n\tif (!s1 || !s2)\n\t\treturn (NULL);\n\tlen = ft_strlen_gnl(s1) + ft_strlen_gnl(s2);\n\tptr = (char *)malloc(sizeof(char) * (len + 1));\n\tif (ptr == NULL)\n\t\treturn (NULL);\n\ttmp = ptr;\n\ti = 0;\n\twhile (*(s1 + i))\n\t{\n\t\t*ptr++ = *(s1 + i);\n\t\ti++;\n\t}\n\tfree(s1);\n\ti = 0;\n\twhile (*(s2 + i)) {\n\t\t*ptr++ = *(s2 + i);\n\t\ti++;\n\t}\n\t*ptr = '\\0';\n\tif (len > 0 && *(tmp + len - 1) == '\\n' && *position < BUFFER_SIZE)\n\t\t*(position) = -1;\n\telse if (*position == BUFFER_SIZE)\n\t\t*position = 0;\n\treturn (tmp);\n}\n\nssize_t\tft_strlen_gnl(const char *str)\n{\n\tsize_t\ti;\n\n\ti = 0;\n\twhile (*str)\n\t{\n\t\ti++;\n\t\tstr++;\n\t}\n\treturn (i);\n}\n\nvoid\tft_bzero(void *s, size_t n)\n{\n\twhile (n--)\n\t\t*(char *)s++ = 0;\n}\n\nvoid\tft_strlcpy_gnl(char *dst, const char *src, ssize_t size)\n{\n\tssize_t\ti;\n\n\tif (!dst || !src)\n\t\treturn ;\n\ti = 0;\n\tif (size > 0)\n\t{\n\t\twhile (i < (size - 1) && *(src + i))\n\t\t{\n\t\t\t*(dst + i) = *(src + i);\n\t\t\ti++;\n\t\t}\n\t\t*(dst + i) = '\\0';\n\t}\n}\n\n/*void\t*ft_memmove(void *dst, const void *src, size_t len)\n{\n\tunsigned char\t*tmp;\n\n\ttmp = dst;\n\tif (!dst && !src)\n\t\treturn (NULL);\n\tif (dst == src)\n\t\treturn (dst);\n\tif (src < dst)\n\t\twhile (len--)\n\t\t\t*((unsigned char *)dst + len) = *((unsigned char *)src + len);\n\telse\n\t\twhile (len--)\n\t\t\t*(unsigned char *)dst++ = *(unsigned char *)src++;\n\treturn (tmp);\n}*/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/get_next_line_utils.c b/get_next_line_utils.c
--- a/get_next_line_utils.c	
+++ b/get_next_line_utils.c	
@@ -81,22 +81,4 @@
 		}
 		*(dst + i) = '\0';
 	}
-}
-
-/*void	*ft_memmove(void *dst, const void *src, size_t len)
-{
-	unsigned char	*tmp;
-
-	tmp = dst;
-	if (!dst && !src)
-		return (NULL);
-	if (dst == src)
-		return (dst);
-	if (src < dst)
-		while (len--)
-			*((unsigned char *)dst + len) = *((unsigned char *)src + len);
-	else
-		while (len--)
-			*(unsigned char *)dst++ = *(unsigned char *)src++;
-	return (tmp);
-}*/
\ No newline at end of file
+}
\ No newline at end of file
Index: get_next_line.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   get_next_line.h                                    :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: sgarcia3 <sgarcia3@student.42madrid.com>   +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2024/01/09 00:20:15 by sgarcia3          #+#    #+#             */\n/*   Updated: 2024/01/09 00:27:18 by sgarcia3         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#ifndef GET_NEXT_LINE_H\n# define GET_NEXT_LINE_H\n\n# include <unistd.h>\n# include <stdlib.h>\n# include <stddef.h>\n\n# ifndef BUFFER_SIZE\n#  define BUFFER_SIZE 1\n# endif\n/*# if BUFFER_SIZE > 1000000\n#  undef BUFFER_SIZE\n#  define BUFFER_SIZE\n# endif*/\n\n//void\t*ft_memmove(void *dst, const void *src, size_t len);\nvoid\tft_bzero(void *s, size_t n);\nvoid\tft_strlcpy_gnl(char *dst, const char *src, ssize_t size);\nchar\t*get_next_line(int fd);\nchar\t*get_buffer(char *buff, ssize_t *position);\nssize_t\tft_strlen_gnl(const char *str);\nchar\t*line_exceeds_buff(char *line, char *buff, ssize_t *position, int fd);\nchar\t*ft_strjoin_gnl(char *s1, char *s2, ssize_t *position);\n\n#endif
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/get_next_line.h b/get_next_line.h
--- a/get_next_line.h	
+++ b/get_next_line.h	
@@ -20,12 +20,7 @@
 # ifndef BUFFER_SIZE
 #  define BUFFER_SIZE 1
 # endif
-/*# if BUFFER_SIZE > 1000000
-#  undef BUFFER_SIZE
-#  define BUFFER_SIZE
-# endif*/
 
-//void	*ft_memmove(void *dst, const void *src, size_t len);
 void	ft_bzero(void *s, size_t n);
 void	ft_strlcpy_gnl(char *dst, const char *src, ssize_t size);
 char	*get_next_line(int fd);
Index: mandatory.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mandatory.cpp b/mandatory.cpp
new file mode 100644
--- /dev/null	
+++ b/mandatory.cpp	
@@ -0,0 +1,157 @@
+extern "C"
+{
+#define new tripouille
+#include "get_next_line.h"
+#undef new
+}
+
+#include <sys/wait.h>
+#include <string.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+#include <unistd.h>
+#include "sigsegv.hpp"
+#include "check.hpp"
+#include "gnl.hpp"
+
+int iTest = 1;
+int main(void)
+{
+	signal(SIGALRM, sigalarm);
+	signal(SIGSEGV, sigsegv);
+	signal(SIGABRT, sigabort);
+	signal(SIGBUS, sigbus);
+	int fd;
+	title("[BUFFER_SIZE = " << BUFFER_SIZE << "]: " << ENDL)
+	title("Invalid fd: ")
+	fd = open("files/empty", O_RDWR);
+	TEST(/* 1 */ gnl(1000,  NULL);
+		 /* 2 */ gnl(-1,  NULL); close(fd);
+		 /* 3 */ gnl(fd,  NULL);)
+
+	title("files/empty: ")
+	fd = open("files/empty", O_RDWR);
+	TEST(/* 1 */ gnl(fd, NULL);
+		 /* 2 */ gnl(fd, NULL);) close(fd);
+
+	title("files/nl: ")
+	fd = open("files/nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "\n");
+		 /* 2 */ gnl(fd, NULL);) close(fd);
+
+	title("files/41_no_nl: ")
+	fd = open("files/41_no_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "01234567890123456789012345678901234567890");
+		 /* 2 */ gnl(fd, NULL);) close(fd);
+
+	title("files/41_with_nl: ")
+	fd = open("files/41_with_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "0123456789012345678901234567890123456789\n");
+		 /* 2 */ gnl(fd, "0");
+		 /* 3 */ gnl(fd, NULL);) close(fd);
+
+	title("files/42_no_nl: ")
+	fd = open("files/42_no_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "012345678901234567890123456789012345678901");
+		/* 2 */ gnl(fd, NULL);) close(fd);
+
+	title("files/42_with_nl: ")
+	fd = open("files/42_with_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "01234567890123456789012345678901234567890\n");
+	if (BUFFER_SIZE == 42) {
+		 /* 2 */ char c = 0; read(fd, &c, 1); check(c == '1'); ++iTest;
+	     /* 3 */ gnl(fd, NULL);}
+	else {
+		 /* 2 */ gnl(fd, "1");
+		 /* 3 */ gnl(fd, NULL);})
+	iTest = 1; close(fd);
+
+	title("files/43_no_nl: ")
+	fd = open("files/43_no_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "0123456789012345678901234567890123456789012");
+		/* 2 */ gnl(fd, NULL);) close(fd);
+
+	title("files/43_with_nl: ")
+	fd = open("files/43_with_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "012345678901234567890123456789012345678901\n");
+		 /* 2 */ gnl(fd, "2");
+		 /* 3 */ gnl(fd, NULL);) close(fd);
+
+	title("files/multiple_nlx5: ")
+	fd = open("files/multiple_nlx5", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "\n");
+		 /* 2 */ gnl(fd, "\n");
+		 /* 3 */ gnl(fd, "\n");
+		 /* 4 */ gnl(fd, "\n");
+		 /* 5 */ gnl(fd, "\n");
+		 /* 6 */ gnl(fd, NULL);) close(fd);
+
+	title("files/multiple_line_no_nl: ")
+	fd = open("files/multiple_line_no_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "01234567890123456789012345678901234567890\n");
+		 /* 2 */ gnl(fd, "987654321098765432109876543210987654321098\n");
+		 /* 3 */ gnl(fd, "0123456789012345678901234567890123456789012\n");
+		 /* 4 */ gnl(fd, "987654321098765432109876543210987654321098\n");
+		 /* 5 */ gnl(fd, "01234567890123456789012345678901234567890");
+		 /* 6 */ gnl(fd, NULL);) close(fd);
+
+	title("files/multiple_line_with_nl: ")
+	fd = open("files/multiple_line_with_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "9876543210987654321098765432109876543210\n");
+		 /* 2 */ gnl(fd, "01234567890123456789012345678901234567890\n");
+		 /* 3 */ gnl(fd, "987654321098765432109876543210987654321098\n");
+		 /* 4 */ gnl(fd, "01234567890123456789012345678901234567890\n");
+		 /* 5 */ gnl(fd, "9876543210987654321098765432109876543210\n");
+		 /* 6 */ gnl(fd, NULL);) close(fd);
+
+	title("files/alternate_line_nl_no_nl: ")
+	fd = open("files/alternate_line_nl_no_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "98765432109876543210987654321098765432109\n");
+		 /* 2 */ gnl(fd, "\n");
+		 /* 3 */ gnl(fd, "012345678901234567890123456789012345678901\n");
+		 /* 4 */ gnl(fd, "\n");
+		 /* 5 */ gnl(fd, "9876543210987654321098765432109876543210987\n");
+		 /* 6 */ gnl(fd, "\n");
+		 /* 7 */ gnl(fd, "012345678901234567890123456789012345678901\n");
+		 /* 8 */ gnl(fd, "\n");
+		 /* 9 */ gnl(fd, "98765432109876543210987654321098765432109");
+		 /* 10 */ gnl(fd, NULL);) close(fd);
+
+	title("files/alternate_line_nl_with_nl: ")
+	fd = open("files/alternate_line_nl_with_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fd, "01234567890123456789012345678901234567890\n");
+		 /* 2 */ gnl(fd, "\n");
+		 /* 3 */ gnl(fd, "987654321098765432109876543210987654321090\n");
+		 /* 4 */ gnl(fd, "\n");
+		 /* 5 */ gnl(fd, "0123456789012345678901234567890123456789012\n");
+		 /* 6 */ gnl(fd, "\n");
+		 /* 7 */ gnl(fd, "987654321098765432109876543210987654321090\n");
+		 /* 8 */ gnl(fd, "\n");
+		 /* 9 */ gnl(fd, "01234567890123456789012345678901234567890\n");
+		 /* 10 */ gnl(fd, NULL);) close(fd);
+
+	title("files/big_line_no_nl: ")
+	fd = open("files/big_line_no_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fdgnl(fd, NULL);) close(fd);
+
+	title("files/big_line_with_nl: ")
+	fd = open("files/big_line_with_nl", O_RDWR);
+	TEST(/* 1 */ gnl(fdn");
+		 /* 2 */ gnl(fd, NULL);) close(fd);
+
+	title("stdin: ")
+	fd = open("files/alternate_line_nl_with_nl", O_RDWR);
+	TEST(/* 1 */ gnl(0, "01234567890123456789012345678901234567890\n");
+		 /* 2 */ gnl(0, "\n");
+		 /* 3 */ gnl(0, "987654321098765432109876543210987654321090\n");
+		 /* 4 */ gnl(0, "\n");
+		 /* 5 */ gnl(0, "0123456789012345678901234567890123456789012\n");
+		 /* 6 */ gnl(0, "\n");
+		 /* 7 */ gnl(0, "987654321098765432109876543210987654321090\n");
+		 /* 8 */ gnl(0, "\n");
+		 /* 9 */ gnl(0, "01234567890123456789012345678901234567890\n");
+		 /* 10 */ gnl(0, NULL);)
+	write(1, "\n", 1);
+	return (0);
+}
\ No newline at end of file
Index: archivo2.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/archivo2.txt b/archivo2.txt
new file mode 100644
--- /dev/null	
+++ b/archivo2.txt	
@@ -0,0 +1,5 @@
+
+
+
+
+
