Index: get_next_line.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   get_next_line.h                                    :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: sgarcia3 <sgarcia3@student.42madrid.com>   +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2024/01/09 00:20:15 by sgarcia3          #+#    #+#             */\n/*   Updated: 2024/01/09 00:27:18 by sgarcia3         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#ifndef GET_NEXT_LINE_H\n# define GET_NEXT_LINE_H\n\n# include <unistd.h>\n# include <stdlib.h>\n# include <stddef.h>\n\n# ifndef BUFFER_SIZE\n#  define BUFFER_SIZE 1\n# endif\n/*# if BUFFER_SIZE > 1000000\n#  undef BUFFER_SIZE\n#  define BUFFER_SIZE 512\n# endif*/\n\n//void\t*ft_memmove(void *dst, const void *src, size_t len);\nvoid\tft_bzero(void *s, size_t n);\nvoid\tft_strlcpy_gnl(char *dst, const char *src, ssize_t size);\nchar\t*get_next_line(int fd);\nchar\t*get_buffer(char *buff, ssize_t *position);\nsize_t\tft_strlen_gnl(const char *str);\nchar\t*line_exceeds_buff(char *line, char *buff, ssize_t *position, int fd);\nchar\t*ft_strjoin_gnl(char *s1, char *s2, ssize_t *position);\n\n#endif
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/get_next_line.h b/get_next_line.h
--- a/get_next_line.h	
+++ b/get_next_line.h	
@@ -20,17 +20,12 @@
 # ifndef BUFFER_SIZE
 #  define BUFFER_SIZE 1
 # endif
-/*# if BUFFER_SIZE > 1000000
-#  undef BUFFER_SIZE
-#  define BUFFER_SIZE 512
-# endif*/
 
-//void	*ft_memmove(void *dst, const void *src, size_t len);
 void	ft_bzero(void *s, size_t n);
 void	ft_strlcpy_gnl(char *dst, const char *src, ssize_t size);
 char	*get_next_line(int fd);
 char	*get_buffer(char *buff, ssize_t *position);
-size_t	ft_strlen_gnl(const char *str);
+ssize_t	ft_strlen_gnl(const char *str);
 char	*line_exceeds_buff(char *line, char *buff, ssize_t *position, int fd);
 char	*ft_strjoin_gnl(char *s1, char *s2, ssize_t *position);
 
